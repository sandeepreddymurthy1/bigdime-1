-- Metadata TABLES CREATION SCRIPTS:
CREATE DATABASE IF NOT EXISTS bigdime_metadata;
-- DROP ALL THE TABLES IF EXISTS
DROP TABLE IF EXISTS ATTRIBUTE;
DROP TABLE IF EXISTS DATA_TYPE;
DROP TABLE IF EXISTS ENTITY;
DROP TABLE IF EXISTS METASEGMENT;
DROP TABLE IF EXISTS METASEGMENT_AUDIT;
DROP TABLE IF EXISTS ENTITY_AUDIT;
DROP TABLE IF EXISTS ATTRIBUTE_AUDIT;
DROP TABLE IF EXISTS RUNTIME_PROPERTY;
DROP TABLE IF EXISTS RUNTIME_INFO;
-- DDL FOR METASEGMENT CREATE TABLE:
CREATE TABLE `METASEGMENT` (
  `METASEGMENT_ID` int(64) NOT NULL AUTO_INCREMENT,
  `ADAPTOR_NAME` varchar(255) DEFAULT NULL,
  `SCHEMA_TYPE` varchar(255) DEFAULT NULL,
  `DATABASE_LOCATION` varchar(255) DEFAULT NULL,
  `DATABASE_NAME` varchar(255) DEFAULT NULL,
  `DESCRIPTION` varchar(255) DEFAULT NULL,
  `IS_DATASOURCE` char DEFAULT NULL,
  `SOURCE_TARGET_TYPE` varchar(255) DEFAULT NULL, 
  `CREATED_AT` datetime DEFAULT NULL,
  `CREATED_BY` varchar(255) DEFAULT NULL, 
  `UPDATED_AT` datetime DEFAULT NULL,
  `UPDATED_BY` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`METASEGMENT_ID`),
  UNIQUE KEY `UNIQUE` (`ADAPTOR_NAME`,`SCHEMA_TYPE`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


-- DDL FOR ENTITY CREATE TABLE:

CREATE TABLE `ENTITY` (
  `ENTITY_ID` int(64) NOT NULL AUTO_INCREMENT,
  `METASEGMENT_ID` int(64) DEFAULT NULL,
  `DESCRIPTION` varchar(255) DEFAULT NULL,
  `ENTITY_LOCATION` varchar(255) DEFAULT NULL,
  `ENTITY_NAME` varchar(255) DEFAULT NULL,
  `VERSION` double(5,1) DEFAULT NULL,  
  PRIMARY KEY (`ENTITY_ID`),
  UNIQUE KEY `UNIQUE` (`METASEGMENT_ID`,`ENTITY_NAME`),
  KEY (`METASEGMENT_ID`),
  CONSTRAINT FOREIGN KEY (`METASEGMENT_ID`) REFERENCES `METASEGMENT` (`METASEGMENT_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- DDL For DATA_TYPE table;
CREATE TABLE `DATA_TYPE` (
  `DATA_TYPE_ID` int(64) NOT NULL AUTO_INCREMENT,
  `DATA_TYPE` varchar(255) DEFAULT NULL,
  `DESCRIPTION` varchar(255) DEFAULT NULL,
  `PROVIDER_NAME` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`DATA_TYPE_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


-- DDL FOR ATTRIBUTE CREATE TABLE:

CREATE TABLE `ATTRIBUTE` (
  `ATTRIBUTE_ID` int(64) NOT NULL AUTO_INCREMENT,
  `ENTITY_ID` int(64) DEFAULT NULL,
  `ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,
  `DATA_TYPE_ID` int(64) DEFAULT NULL,
  `COMMENT` varchar(255) DEFAULT NULL,
  `FIELD_TYPE` varchar(255) DEFAULT NULL,
  `FRACTIONAL_PART` varchar(255) DEFAULT NULL,
  `INTPART` varchar(255) DEFAULT NULL,
  `NULLABLE` varchar(255) DEFAULT NULL,
  `MAPPED_ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,
  `DEFAULT_VALUE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ATTRIBUTE_ID`),
  UNIQUE KEY `UNIQUE` (`ENTITY_ID`,`ATTRIBUTE_NAME`),
  KEY (`ENTITY_ID`),
  CONSTRAINT `FK_ENTITY_ID` FOREIGN KEY (`ENTITY_ID`) REFERENCES `ENTITY` (`ENTITY_ID`),
  CONSTRAINT `FK_DATA_TYPE_ID` FOREIGN KEY (`DATA_TYPE_ID`) REFERENCES `DATA_TYPE` (`DATA_TYPE_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- DDL FOR RUNTIME_INFO
CREATE TABLE `RUNTIME_INFO` (
  `RUNTIME_INFO_ID` int(64) NOT NULL AUTO_INCREMENT,
  `ADAPTOR_NAME` varchar(255) DEFAULT NULL,
  `ENTITY_NAME` varchar(255) DEFAULT NULL,
  `INPUT_DESCRIPTOR` varchar(255) DEFAULT NULL,
  `STATUS` varchar(255) DEFAULT NULL,
  `NUM_OF_ATTEMPTS` varchar(255) DEFAULT NULL, 
  `CREATED_AT` datetime DEFAULT NULL,
  `CREATED_BY` varchar(255) DEFAULT NULL, 
  `UPDATED_AT` datetime DEFAULT NULL,
  `UPDATED_BY` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`RUNTIME_INFO_ID`),
  UNIQUE KEY `UNIQUE` (`ADAPTOR_NAME`,`ENTITY_NAME`,`INPUT_DESCRIPTOR`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- DDL FOR RUNTIME_PROPERTY

CREATE TABLE `RUNTIME_PROPERTY` (
  `RUNTIME_PROPERTY_ID` int(64) NOT NULL AUTO_INCREMENT,
  `RUNTIME_INFO_ID` int(64) DEFAULT NULL,
  `PROPERTY_NAME` varchar(255) DEFAULT NULL,
  `PROPERTY_VALUE` VARCHAR(1024) DEFAULT NULL,
  PRIMARY KEY (`RUNTIME_PROPERTY_ID`),
  KEY (`RUNTIME_INFO_ID`),
  CONSTRAINT `FK_RUNTIME_INFO_ID` FOREIGN KEY (`RUNTIME_INFO_ID`) REFERENCES `RUNTIME_INFO` (`RUNTIME_INFO_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- AUDIT TABLES INFO:

-- DDL FOR METASEGMENT_AUDIT CREATE TABLE:

CREATE TABLE `METASEGMENT_AUDIT` (
`METASEGMENT_AUDIT_ID` int(64) NOT NULL AUTO_INCREMENT,
`METASEGMENT_ID` int(64) NOT NULL,  
`ADAPTOR_NAME` varchar(255) DEFAULT NULL,
`SCHEMA_TYPE` varchar(255) DEFAULT NULL,   
`DATABASE_LOCATION` varchar(255) DEFAULT NULL,  
`DATABASE_NAME` varchar(255) DEFAULT NULL,  
`DESCRIPTION` varchar(255) DEFAULT NULL,  
`IS_DATASOURCE` char DEFAULT NULL,  
`SOURCE_TARGET_TYPE` varchar(255) DEFAULT NULL,  
`CREATED_AT` datetime DEFAULT NULL, 
`CREATED_BY` varchar(255) DEFAULT NULL,
`UPDATED_AT` datetime DEFAULT NULL,  
`UPDATED_BY` varchar(255) DEFAULT NULL,  
PRIMARY KEY (`METASEGMENT_AUDIT_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- Trigger:

DELIMITER $$
DROP TRIGGER IF EXISTS `metasegment_INSERT` $$
CREATE TRIGGER `METASEGMENT_INSERT` 
AFTER INSERT ON `METASEGMENT`
FOR EACH ROW
BEGIN
                        
INSERT INTO METASEGMENT_AUDIT(METASEGMENT_ID,ADAPTOR_NAME,CREATED_AT,CREATED_BY,DATABASE_LOCATION,DATABASE_NAME,DESCRIPTION,IS_DATASOURCE,SOURCE_TARGET_TYPE,SCHEMA_TYPE,UPDATED_AT,UPDATED_BY) SELECT METASEGMENT_ID,ADAPTOR_NAME,CREATED_AT,CREATED_BY,DATABASE_LOCATION,DATABASE_NAME,DESCRIPTION,IS_DATASOURCE,SOURCE_TARGET_TYPE,SCHEMA_TYPE,UPDATED_AT,UPDATED_BY FROM METASEGMENT WHERE METASEGMENT_ID = NEW.METASEGMENT_ID;
                        
                       
            
END $$
DELIMITER ;

-- DDL ENTITY_AUDIT CREATE TABLE:

CREATE TABLE `ENTITY_AUDIT` (
  `ENTITY_AUDIT_ID` int(64) NOT NULL AUTO_INCREMENT,
  `ENTITY_ID` int(64) NOT NULL,
  `METASEGMENT_ID` int(64) DEFAULT NULL,
  `DESCRIPTION` varchar(255) DEFAULT NULL,
  `ENTITY_LOCATION` varchar(255) DEFAULT NULL,
  `ENTITY_NAME` varchar(255) DEFAULT NULL,
  `VERSION` double(5,1) DEFAULT NULL,
  PRIMARY KEY (`ENTITY_AUDIT_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- Trigger:

DELIMITER $$
DROP TRIGGER IF EXISTS `ENTITY_INSERT` $$
CREATE TRIGGER `ENTITY_INSERT` 
AFTER UPDATE ON `ENTITY`
FOR EACH ROW
BEGIN
                        
INSERT INTO ENTITY_AUDIT(ENTITY_ID,DESCRIPTION,ENTITY_LOCATION,ENTITY_NAME,VERSION,METASEGMENT_ID) SELECT ENTITY_ID,DESCRIPTION,ENTITY_LOCATION,ENTITY_NAME,VERSION,METASEGMENT_ID FROM ENTITY WHERE ENTITY_ID = NEW.ENTITY_ID;
      
                        
                       
            
END $$
DELIMITER ;




-- DDL FOR ATTRIBUTE_AUDIT CREATE TABLE:

CREATE TABLE `ATTRIBUTE_AUDIT` (
  `ATTRIBUTE_AUDIT_ID` int(64) NOT NULL AUTO_INCREMENT,
  `ENTITY_ID` int(64) DEFAULT NULL,
  `ATTRIBUTE_ID` int(64) NOT NULL ,
  `ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,
  `DATA_TYPE_ID` int(64) DEFAULT NULL,
  `COMMENT` varchar(255) DEFAULT NULL,
  `FIELD_TYPE` varchar(255) DEFAULT NULL,
  `FRACTIONAL_PART` varchar(255) DEFAULT NULL,
  `INTPART` varchar(255) DEFAULT NULL,
  `NULLABLE` varchar(255) DEFAULT NULL,
  `MAPPED_ATTRIBUTE_NAME` varchar(255) DEFAULT NULL,
  `DEFAULT_VALUE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ATTRIBUTE_AUDIT_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- Trigger:

DELIMITER $$
DROP TRIGGER IF EXISTS `ATTRIBUTE_INSERT` $$
CREATE TRIGGER `ATTRIBUTE_INSERT` 
AFTER UPDATE ON `ATTRIBUTE`
FOR EACH ROW
BEGIN
                        
INSERT INTO ATTRIBUTE_AUDIT(ATTRIBUTE_ID,ATTRIBUTE_NAME,DATA_TYPE_ID,COMMENT,FIELD_TYPE,FRACTIONAL_PART,INTPART,NULLABLE,ENTITY_ID) SELECT ATTRIBUTE_ID,ATTRIBUTE_NAME,DATA_TYPE_ID,COMMENT,FIELD_TYPE,FRACTIONAL_PART,INTPART,NULLABLE,ENTITY_ID FROM ATTRIBUTE WHERE ATTRIBUTE_ID = NEW.ATTRIBUTE_ID;
      
                        
                       
            
END $$
DELIMITER ;


-- SELECT * FROM METASEGMENT;
-- SELECT * FROM METASEGMENT_AUDIT;
-- SELECT * FROM ENTITY;
-- SELECT * FROM ENTITY_AUDIT;
-- SELECT * FROM ATTRIBUTE;
-- SELECT * FROM ATTRIBUTE_AUDIT;
